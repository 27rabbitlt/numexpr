name: Build

on: [push, pull_request]

env:
  CIBW_BEFORE_BUILD: pip install setuptools oldest-supported-numpy
  CIBW_BUILD_VERBOSITY: 3
  # CIBW_TEST_REQUIRES: pytest
  CIBW_TEST_COMMAND: python -c "import sys, numexpr; sys.exit(0 if numexpr.test().wasSuccessful() else 1)"
  CIBW_TEST_SKIP: "*macosx*arm64*"
  CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
    DYLD_FALLBACK_LIBRARY_PATH=/tmp/hdf5/lib delocate-listdeps {wheel} &&
    DYLD_FALLBACK_LIBRARY_PATH=/tmp/hdf5/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BUILD: cp3{6,7,8,9,10}-*
      CIBW_ARCHS_LINUX: ${{ matrix.arch }}
      CIBW_ARCHS_MACOS: ${{ matrix.arch }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
        # arch: [x86_64, aarch64]
        # exclude:
        #   - os: windows-latest
        #     arch: aarch64
        #   - os: macos-latest
        #     arch: aarch64
        # Disable aarch64 builds until they take a reasonable period to build and test
        arch: [x86_64]
        include:
          - arch: arm64
            os: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.10'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      - uses: docker/setup-qemu-action@v1
        if: ${{ matrix.arch == 'aarch64' }}
        name: Set up QEMU
      
      - name: Build wheels for CPython
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
